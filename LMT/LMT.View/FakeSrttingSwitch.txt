using BidCfgParser;
using CommonUtility;
using SCMTResources.CustomControls;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Markup;

namespace LMT.View
{
  public class FakeSettingSwitch : CustomWindow, IComponentConnector
  {
    private bool _isOn;
    internal CheckBox ckSwitch;
    private bool _contentLoaded;

    public FakeSettingSwitch()
    {
      this.InitializeComponent();
      this.ckSwitch.IsChecked = new bool?(Singleton<BidHelper>.GetInstance().IsActiveBid());
    }

    private void CheckBox_Checked(object sender, RoutedEventArgs e) => this._isOn = true;

    private void CheckBox_Unchecked(object sender, RoutedEventArgs e) => this._isOn = false;

    private void Button_Click(object sender, RoutedEventArgs e)
    {
      Singleton<BidHelper>.GetInstance().SetSwitchState(this._isOn);
      this.Close();
    }

    private void Button_Click_1(object sender, RoutedEventArgs e) => this.Close();

    [DebuggerNonUserCode]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    public void InitializeComponent()
    {
      if (this._contentLoaded)
        return;
      this._contentLoaded = true;
      Application.LoadComponent((object) this, new Uri("/LMT;component/view/fakesettingswitch.xaml", UriKind.Relative));
    }

    [DebuggerNonUserCode]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    void IComponentConnector.Connect(int connectionId, object target)
    {
      switch (connectionId)
      {
        case 1:
          this.ckSwitch = (CheckBox) target;
          this.ckSwitch.Checked += new RoutedEventHandler(this.CheckBox_Checked);
          this.ckSwitch.Unchecked += new RoutedEventHandler(this.CheckBox_Unchecked);
          break;
        case 2:
          ((ButtonBase) target).Click += new RoutedEventHandler(this.Button_Click);
          break;
        case 3:
          ((ButtonBase) target).Click += new RoutedEventHandler(this.Button_Click_1);
          break;
        default:
          this._contentLoaded = true;
          break;
      }
    }
  }
}
