using CommonUtility;
using MIBDataParser;
using MsgQueue;
using SCMTResources.CustomControls;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.IO;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Forms;
using System.Windows.Markup;
using UILanguageHelper;

namespace LMT.View
{
  public class LoadLmdtz : CustomWindow, IComponentConnector
  {
    internal System.Windows.Controls.TextBox tbFilePath;
    internal System.Windows.Controls.Button btnFilePath;
    private bool _contentLoaded;

    public LoadLmdtz() => this.InitializeComponent();

    private void btnFilePath_Click(object sender, RoutedEventArgs e)
    {
      OpenFileDialog openFileDialog1 = new OpenFileDialog();
      openFileDialog1.Filter = "dtz | *.dtz";
      OpenFileDialog openFileDialog2 = openFileDialog1;
      if (openFileDialog2.ShowDialog() != System.Windows.Forms.DialogResult.OK)
        return;
      string fileName = openFileDialog2.FileName;
      this.tbFilePath.Text = fileName;
      DispatcherHelper.DoEvents();
      if (!File.Exists(fileName))
      {
        int num = (int) CustomMessageBox.Show(LanguageServices.Current.GetTextValue("Index_Lmdtz_FileNotExist"), messageBoxImage: CustomMessageBoxIcon.Error);
      }
      else
      {
        if (!this.LoadDtzFile(fileName).Result)
          return;
        this.Close();
        PublishHelper.PublishMsg("ManualLoadLmdtz", "true", "d:\\code\\SCMT\\src\\scmt\\MainWindow\\View\\LoadLmdtz.xaml.cs", 50, nameof (btnFilePath_Click));
      }
    }

    private async Task<bool> LoadDtzFile(string strPath)
    {
      try
      {
        List<string> mibVerNo = new List<string>();
        if (!await Database.GetInstance().initDatabaseLmDtzByLoad(strPath, mibVerNo))
        {
          int num = (int) CustomMessageBox.Show(LanguageServices.Current.GetTextValue("Index_Lmdtz_LoadFailed"), messageBoxImage: CustomMessageBoxIcon.Error);
          return false;
        }
        string str = "未知";
        if (mibVerNo.Count > 0)
          str = mibVerNo[0];
        int num1 = (int) CustomMessageBox.Show(string.Format("{0}{1}", (object) LanguageServices.Current.GetTextValue("Index_Lmdtz_Succeed"), (object) str));
        mibVerNo = (List<string>) null;
      }
      catch (Exception ex)
      {
        int num = (int) CustomMessageBox.Show(string.Format("{0}{1}", (object) LanguageServices.Current.GetTextValue("Index_Lmdtz_Exception"), (object) ex.Message), messageBoxImage: CustomMessageBoxIcon.Error);
        return false;
      }
      return true;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    public void InitializeComponent()
    {
      if (this._contentLoaded)
        return;
      this._contentLoaded = true;
      System.Windows.Application.LoadComponent((object) this, new Uri("/LMT;component/view/loadlmdtz.xaml", UriKind.Relative));
    }

    [DebuggerNonUserCode]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    void IComponentConnector.Connect(int connectionId, object target)
    {
      if (connectionId != 1)
      {
        if (connectionId == 2)
        {
          this.btnFilePath = (System.Windows.Controls.Button) target;
          this.btnFilePath.Click += new RoutedEventHandler(this.btnFilePath_Click);
        }
        else
          this._contentLoaded = true;
      }
      else
        this.tbFilePath = (System.Windows.Controls.TextBox) target;
    }
  }
}
