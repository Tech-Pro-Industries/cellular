using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Markup;

namespace LMT.View
{
  public class EditColumns : Window, IComponentConnector
  {
    private ObservableCollection<DataGridColumn> displayHeader = new ObservableCollection<DataGridColumn>();
    private ObservableCollection<DataGridColumn> HiddenHeader = new ObservableCollection<DataGridColumn>();
    public bool IsOK;
    internal ListBox hiddenls;
    internal ListBox displayls;
    private bool _contentLoaded;

    public EditColumns(ObservableCollection<DataGridColumn> columns)
    {
      foreach (DataGridColumn column in (Collection<DataGridColumn>) columns)
      {
        if (column.Visibility == Visibility.Visible)
          this.DisplayHeader.Add(column);
        else
          this.HiddenHeader1.Add(column);
      }
      this.InitializeComponent();
      this.hiddenls.ItemsSource = (IEnumerable) this.HiddenHeader;
      this.displayls.ItemsSource = (IEnumerable) this.DisplayHeader;
    }

    public ObservableCollection<DataGridColumn> DisplayHeader
    {
      get => this.displayHeader;
      set => this.displayHeader = value;
    }

    public ObservableCollection<DataGridColumn> HiddenHeader1
    {
      get => this.HiddenHeader;
      set => this.HiddenHeader = value;
    }

    private void Button_Click(object sender, RoutedEventArgs e)
    {
      DataGridColumn selectedItem = this.hiddenls.SelectedItem as DataGridColumn;
      this.HiddenHeader.Remove(selectedItem);
      this.displayHeader.Add(selectedItem);
    }

    private void Button_Click_1(object sender, RoutedEventArgs e)
    {
      DataGridColumn selectedItem = this.displayls.SelectedItem as DataGridColumn;
      this.displayHeader.Remove(selectedItem);
      this.HiddenHeader.Add(selectedItem);
    }

    private void button_Ok_Click(object sender, RoutedEventArgs e)
    {
      this.IsOK = true;
      this.Close();
    }

    private void button_Cancel_Click(object sender, RoutedEventArgs e)
    {
      this.IsOK = false;
      this.Close();
    }

    [DebuggerNonUserCode]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    public void InitializeComponent()
    {
      if (this._contentLoaded)
        return;
      this._contentLoaded = true;
      Application.LoadComponent((object) this, new Uri("/LMT;component/view/editcolumns.xaml", UriKind.Relative));
    }

    [DebuggerNonUserCode]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    void IComponentConnector.Connect(int connectionId, object target)
    {
      switch (connectionId)
      {
        case 1:
          this.hiddenls = (ListBox) target;
          break;
        case 2:
          ((ButtonBase) target).Click += new RoutedEventHandler(this.Button_Click);
          break;
        case 3:
          ((ButtonBase) target).Click += new RoutedEventHandler(this.Button_Click_1);
          break;
        case 4:
          this.displayls = (ListBox) target;
          break;
        case 5:
          ((ButtonBase) target).Click += new RoutedEventHandler(this.button_Ok_Click);
          break;
        case 6:
          ((ButtonBase) target).Click += new RoutedEventHandler(this.button_Cancel_Click);
          break;
        default:
          this._contentLoaded = true;
          break;
      }
    }
  }
}
