using SCMTResources.CustomControls;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Markup;
using UILanguageHelper;

namespace LMT.View
{
  public class LanguageSetting : CustomWindow, IComponentConnector
  {
    internal ComboBox LanguageNames;
    internal Button Apply;
    internal Button Cancel;
    private bool _contentLoaded;

    public event EventHandler LanguageChanged;

    public LanguageSetting()
    {
      this.InitializeComponent();
      this.LanguageNames.ItemsSource = (IEnumerable) UILanguageDefn.AllSupportedLanguageCodes;
      this.LanguageNames.SelectedItem = (object) UILanguageDefn.AllSupportedLanguageCodes.FirstOrDefault<string>((Func<string, bool>) (x => x == LanguageServices.Current.CurrentLanguageCode));
    }

    private void Cancel_Click(object sender, RoutedEventArgs e) => this.Close();

    private void Apply_Click(object sender, RoutedEventArgs e)
    {
      string languageCode = this.LanguageNames.SelectedValue.ToString().Trim();
      if (string.IsNullOrEmpty(languageCode))
      {
        int num1 = (int) CustomMessageBox.Show(LanguageServices.Current.GetTextValue("Index_Language_NotSelected"));
      }
      else if (!UILanguageDefn.AllSupportedLanguageCodes.Contains(languageCode))
      {
        int num2 = (int) CustomMessageBox.Show(LanguageServices.Current.GetTextValue("Index_Language_Failed"));
        LogManager.Log.Error("切换系统语言：不支持选择的语言", "d:\\code\\SCMT\\src\\scmt\\MainWindow\\View\\LanguageSetting.xaml.cs", 56, nameof (Apply_Click));
      }
      else if (CustomMessageBox.Show(LanguageServices.Current.GetTextValue("Index_Language_RestartTip"), CustomMessageBoxButton.OKCancel, CustomMessageBoxIcon.Question, LanguageServices.Current.GetTextValue("Index_HelpMenu_ChangeLanguage")) == CustomMessageBoxResult.OK)
      {
        if (!LanguageServices.Current.UpdateLanguageData(languageCode))
        {
          int num3 = (int) CustomMessageBox.Show(LanguageServices.Current.GetTextValue("Index_Language_Failed"));
          LogManager.Log.Error("切换系统语言：切换失败", "d:\\code\\SCMT\\src\\scmt\\MainWindow\\View\\LanguageSetting.xaml.cs", 69, nameof (Apply_Click));
        }
        else
        {
          if (this.LanguageChanged != null)
            this.LanguageChanged((object) this, new EventArgs());
          Application.Current.Shutdown();
        }
      }
      else
        this.Close();
    }

    [DebuggerNonUserCode]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    public void InitializeComponent()
    {
      if (this._contentLoaded)
        return;
      this._contentLoaded = true;
      Application.LoadComponent((object) this, new Uri("/LMT;component/view/languagesetting.xaml", UriKind.Relative));
    }

    [DebuggerNonUserCode]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    void IComponentConnector.Connect(int connectionId, object target)
    {
      switch (connectionId)
      {
        case 1:
          this.LanguageNames = (ComboBox) target;
          break;
        case 2:
          this.Apply = (Button) target;
          this.Apply.Click += new RoutedEventHandler(this.Apply_Click);
          break;
        case 3:
          this.Cancel = (Button) target;
          this.Cancel.Click += new RoutedEventHandler(this.Cancel_Click);
          break;
        default:
          this._contentLoaded = true;
          break;
      }
    }
  }
}
