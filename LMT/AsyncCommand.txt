using System;
using System.Threading.Tasks;
using System.Windows.Input;

namespace LMT
{
  public class AsyncCommand : ICommand
  {
    protected readonly Predicate<object> _canExecute;
    protected Func<Task> _asyncExecute;

    public AsyncCommand(Func<Task> asyncExecute, Predicate<object> canExecute = null)
    {
      this._asyncExecute = asyncExecute;
      this._canExecute = canExecute;
    }

    public bool CanExecute(object parameter) => this._canExecute == null || this._canExecute(parameter);

    public event EventHandler CanExecuteChanged
    {
      add => CommandManager.RequerySuggested += value;
      remove => CommandManager.RequerySuggested -= value;
    }

    public async void Execute(object parameter) => await this._asyncExecute();
  }
}
