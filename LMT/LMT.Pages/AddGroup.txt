using CommonUtility;
using LMT.View;
using SCMTResources.CustomControls;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Markup;
using UILanguageHelper;

namespace LMT.Pages
{
  public class AddGroup : CustomWindow, IComponentConnector
  {
    private UserManager UM;
    private bool IsAdd;
    public ObservableCollection<string> _Member = new ObservableCollection<string>();
    private GroupInfo _gInfo;
    private ObservableCollection<USERInfo> alluser = UserInformation.GetUser();
    internal TabControl tabControl;
    internal Image image;
    internal TextBox tb_GroupName;
    internal Label label;
    internal TextBox tb_Desc;
    internal Label label1;
    internal ComboBox cb_rights;
    internal Label label2;
    internal ListBox lb_Member;
    internal Button Btn_Confirm;
    internal Button Btn_Cancel;
    internal Button Btn_AddUser;
    internal Button Btn_DeleUser;
    private bool _contentLoaded;

    public AddGroup(UserManager _UM)
    {
      this.InitializeComponent();
      this.UM = _UM;
      this.IsAdd = _UM.IsAdd;
      this.lb_Member.ItemsSource = (IEnumerable) this._Member;
      if (this.IsAdd)
        return;
      if (Singleton<UserInfo>.GetInstance().User != "administrator")
        this.Btn_Confirm.IsEnabled = false;
      else
        this.Btn_Confirm.IsEnabled = true;
      this._gInfo = UserInformation.GetGroup(_UM.GroupName);
      this.tb_GroupName.Text = _UM.GroupName;
      this.tb_Desc.Text = this._gInfo.Desc;
      this.cb_rights.Text = this._gInfo.Rights;
      foreach (USERInfo userInfo in (Collection<USERInfo>) this.alluser)
      {
        if (userInfo.Groups.Contains(_UM.GroupName))
          this._Member.Add(userInfo.User);
      }
    }

    private void AddUser_Click(object sender, RoutedEventArgs e)
    {
      new AddUserToGroup(this).ShowDialog();
      this.lb_Member.ItemsSource = (IEnumerable) this._Member;
    }

    private void DeleUser_Click(object sender, RoutedEventArgs e)
    {
      if (this.lb_Member.SelectedItem == null)
        return;
      this._Member.Remove(this.lb_Member.SelectedItem.ToString());
    }

    private void Btn_Confirm_Click(object sender, RoutedEventArgs e)
    {
      if (string.IsNullOrEmpty(this.tb_GroupName.Text.Trim()))
      {
        int num1 = (int) MessageBox.Show(LanguageServices.Current.GetTextValue("UM_palarm21"), LanguageServices.Current.GetTextValue("UM_ag"), MessageBoxButton.OK);
      }
      else
      {
        string err;
        if (this.IsAdd && !UserInformation.CheckRecord(string.Format("select count(*) from USERGROUP where GName='{0}'", (object) this.tb_GroupName.Text.Trim()), out err))
        {
          int num2 = (int) MessageBox.Show(err, LanguageServices.Current.GetTextValue("UM_ag"), MessageBoxButton.OK);
        }
        else if (string.IsNullOrEmpty(this.cb_rights.Text))
        {
          int num3 = (int) MessageBox.Show(LanguageServices.Current.GetTextValue("UM_palarm20"), LanguageServices.Current.GetTextValue("UM_ag"), MessageBoxButton.OK);
        }
        else if (this.IsAdd)
        {
          string strSql = string.Format("insert into USERGROUP(GName,GRights,GDesc,GStatus) values('{0}','{1}','{2}','正常');", (object) this.tb_GroupName.Text.Trim(), (object) this.cb_rights.Text.Trim(), (object) this.tb_Desc.Text.Trim());
          foreach (string name in (Collection<string>) this._Member)
          {
            string str = UserInformation.GetUser(name).Groups + "\\" + this.tb_GroupName.Text.Trim();
            strSql += string.Format("update USERINFO set Groups='{0}' where User='{1}';", (object) str, (object) name);
          }
          if (UserInformation.SaveData(strSql))
          {
            this.UM.GroupTree.Clear();
            this.UM.InitGroupMenu();
            this.Close();
          }
          else
          {
            int num4 = (int) MessageBox.Show(LanguageServices.Current.GetTextValue("UM_palarm23"), LanguageServices.Current.GetTextValue("UM_roleInfor"), MessageBoxButton.OK);
            this.Close();
          }
        }
        else
        {
          string strSql = string.Format("update USERGROUP set GName='{0}',GDesc='{1}',GRights='{2}' where ID='{3}';", (object) this.tb_GroupName.Text.Trim(), (object) this.tb_Desc.Text.Trim(), (object) this.cb_rights.Text.Trim(), (object) this._gInfo.ID);
          string[] second = new string[1]
          {
            this.UM.GroupName
          };
          foreach (USERInfo userInfo in (Collection<USERInfo>) this.alluser)
          {
            USERInfo item = userInfo;
            string str1 = "";
            if (this._Member.Where<string>((Func<string, bool>) (x => x == item.User)).Count<string>() == 0)
            {
              if (item.Groups.Contains(this.UM.GroupName))
              {
                foreach (string str2 in ((IEnumerable<string>) item.Groups.Split('\\')).Except<string>((IEnumerable<string>) second))
                  str1 = str1 + str2 + "\\";
                str1 = str1.TrimEnd('\\');
              }
              strSql += string.Format("update USERINFO set Groups='{0}' where User='{1}';", (object) str1, (object) item.User);
            }
            else if (item.Groups.Contains(this.UM.GroupName))
            {
              if (this.tb_GroupName.Text.Trim() != this.UM.GroupName)
              {
                foreach (string str3 in ((IEnumerable<string>) item.Groups.Split('\\')).Except<string>((IEnumerable<string>) second))
                  str1 = str1 + str3 + "\\";
                string str4 = str1 + this.tb_GroupName.Text.Trim();
                strSql += string.Format("update USERINFO set Groups='{0}' where User='{1}';", (object) str4, (object) item.User);
              }
            }
            else
            {
              string str5 = item.Groups + "\\" + this.tb_GroupName.Text.Trim();
              strSql += string.Format("update USERINFO set Groups='{0}' where User='{1}';", (object) str5, (object) item.User);
            }
          }
          if (UserInformation.SaveData(strSql))
          {
            this.UM.GroupTree.Clear();
            this.UM.InitGroupMenu();
            this.UM.InitGroupDataGrid();
            this.Close();
          }
          else
          {
            int num5 = (int) MessageBox.Show(LanguageServices.Current.GetTextValue("UM_palarm22"), LanguageServices.Current.GetTextValue("UM_roleInfor"), MessageBoxButton.OK);
            this.Close();
          }
        }
      }
    }

    private void Btn_Cancel_Click(object sender, RoutedEventArgs e) => this.Close();

    private void lb_Member_GotFocus(object sender, RoutedEventArgs e) => this.Btn_DeleUser.IsEnabled = true;

    [DebuggerNonUserCode]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    public void InitializeComponent()
    {
      if (this._contentLoaded)
        return;
      this._contentLoaded = true;
      Application.LoadComponent((object) this, new Uri("/LMT;component/pages/addgroup.xaml", UriKind.Relative));
    }

    [DebuggerNonUserCode]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    void IComponentConnector.Connect(int connectionId, object target)
    {
      switch (connectionId)
      {
        case 1:
          this.tabControl = (TabControl) target;
          break;
        case 2:
          this.image = (Image) target;
          break;
        case 3:
          this.tb_GroupName = (TextBox) target;
          break;
        case 4:
          this.label = (Label) target;
          break;
        case 5:
          this.tb_Desc = (TextBox) target;
          break;
        case 6:
          this.label1 = (Label) target;
          break;
        case 7:
          this.cb_rights = (ComboBox) target;
          break;
        case 8:
          this.label2 = (Label) target;
          break;
        case 9:
          this.lb_Member = (ListBox) target;
          this.lb_Member.GotFocus += new RoutedEventHandler(this.lb_Member_GotFocus);
          break;
        case 10:
          this.Btn_Confirm = (Button) target;
          this.Btn_Confirm.Click += new RoutedEventHandler(this.Btn_Confirm_Click);
          break;
        case 11:
          this.Btn_Cancel = (Button) target;
          this.Btn_Cancel.Click += new RoutedEventHandler(this.Btn_Cancel_Click);
          break;
        case 12:
          this.Btn_AddUser = (Button) target;
          this.Btn_AddUser.Click += new RoutedEventHandler(this.AddUser_Click);
          break;
        case 13:
          this.Btn_DeleUser = (Button) target;
          this.Btn_DeleUser.Click += new RoutedEventHandler(this.DeleUser_Click);
          break;
        default:
          this._contentLoaded = true;
          break;
      }
    }
  }
}
